name: push-to-master-action
on: 
  push:
    branches:
    - master

env:
  GCP_PROJECT_ID: ian-harris-test01
  GCP_STATE_BUCKET: ian-harris-test01-terraform-state
  GCP_STATE_PREFIX: default

jobs:

  plan_job:
    name: Terraform plan
    runs-on: ubuntu-latest
    environment: master

    steps:

    - name: Checkout
      uses: actions/checkout@v2

    - name: Set up Cloud SDK - PLAN account
      uses: google-github-actions/setup-gcloud@master
      with:
        project_id: ${{ env.GCP_PROJECT_ID }}
        service_account_key: ${{ secrets.RW_KEY }}
        export_default_credentials: true

    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v1
      with:
        terraform_version: 1.0.5

    - name: Terraform Format
      id: fmt
      run: terraform fmt -list=true -write=false -diff=true -check=true -chdir=terraform
      continue-on-error: true

    - name: Terraform Init
      id: init
      run: terraform init -backend-config="bucket=${{ env.GCP_STATE_BUCKET }}" -backend-config="prefix=${{ env.GCP_STATE_PREFIX }}" -chdir=terraform

    - name: Terraform Validate
      id: validate
      run: terraform validate -no-color -chdir=terraform

    - name: Terraform Plan
      id: plan
      run: terraform plan -no-color -out "planfile"

    - name: Upload planfile
      uses: actions/upload-artifact@v2
      with:
        name: planfile
        path: planfile
        if-no-files-found: error

  apply_job:
    name: Terraform apply
    runs-on: ubuntu-latest
    needs: plan_job

    environment: deploy

    steps:

    - name: Checkout
      uses: actions/checkout@v2

    - name: Set up Cloud SDK - DEPLOY account
      uses: google-github-actions/setup-gcloud@master
      with:
        project_id: ${{ env.GCP_PROJECT_ID }}
        service_account_key: ${{ secrets.DEPLOY_KEY }}
        export_default_credentials: true

    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v1
      with:
        terraform_version: 1.0.5

    - name: Download planfile
      uses: actions/download-artifact@v2
      with:
        name: planfile

    - name: Terraform Init
      id: init
      run: terraform init -backend-config="bucket=${{ env.GCP_STATE_BUCKET }}" -backend-config="prefix=${{ env.GCP_STATE_PREFIX }}" -chdir=terraform

    - name: Terraform Apply
      if: github.ref == 'refs/heads/master' && github.event_name == 'push'
      run: terraform apply -auto-approve -input=false planfile
